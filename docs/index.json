{
  "api/Global.AbstractCombatController.html": {
    "href": "api/Global.AbstractCombatController.html",
    "title": "Class AbstractCombatController | Universe Explorer Unity documentation",
    "keywords": "Class AbstractCombatController CombatController that manages Health Inheritance System.Object AbstractCombatController CombatControllerEnemy CombatControllerPlayer Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class AbstractCombatController : MonoBehaviour Constructors AbstractCombatController() Declaration public AbstractCombatController() Fields _Ammo Declaration public int _Ammo Field Value Type Description System.Int32 _CannShoot Declaration public bool _CannShoot Field Value Type Description System.Boolean _Damage Declaration public float _Damage Field Value Type Description System.Single _Health Declaration public float _Health Field Value Type Description System.Single _MaxHealth Declaration protected float _MaxHealth Field Value Type Description System.Single _MaxShootDistance Declaration public float _MaxShootDistance Field Value Type Description System.Single Methods Die() Declaration public abstract void Die() GetHealth(Single) Declaration public void GetHealth(float amount) Parameters Type Name Description System.Single amount HealthChanged() Declaration public abstract void HealthChanged() SetMaxHealth(Single) Declaration public void SetMaxHealth(float newMaxHealth) Parameters Type Name Description System.Single newMaxHealth TakeDamage(Single) Declaration public void TakeDamage(float amount) Parameters Type Name Description System.Single amount"
  },
  "api/Global.AsteroidBehaviour.html": {
    "href": "api/Global.AsteroidBehaviour.html",
    "title": "Class AsteroidBehaviour | Universe Explorer Unity documentation",
    "keywords": "Class AsteroidBehaviour Inheritance System.Object AsteroidBehaviour Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AsteroidBehaviour : MonoBehaviour Fields growFactor Declaration public float growFactor Field Value Type Description System.Single maxSize Declaration public float maxSize Field Value Type Description System.Single waitTime Declaration public float waitTime Field Value Type Description System.Single Methods Remove() Declaration public void Remove() Setup(Single, Single, Single, Single, Single) Declaration public void Setup(float thrust, float rotationSpeed, float mass, float drag, float angularDrag) Parameters Type Name Description System.Single thrust System.Single rotationSpeed System.Single mass System.Single drag System.Single angularDrag Setup(Single, Single, Single, Single, Single, GameObject, Single) Declaration public void Setup(float thrust, float rotationSpeed, float mass, float drag, float angularDrag, GameObject parent, float orbitSpeed) Parameters Type Name Description System.Single thrust System.Single rotationSpeed System.Single mass System.Single drag System.Single angularDrag GameObject parent System.Single orbitSpeed"
  },
  "api/Global.AsteroidField.html": {
    "href": "api/Global.AsteroidField.html",
    "title": "Class AsteroidField | Universe Explorer Unity documentation",
    "keywords": "Class AsteroidField Inheritance System.Object AsteroidField Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AsteroidField : MonoBehaviour Fields _angularDrag Declaration public float _angularDrag Field Value Type Description System.Single _drag Declaration public float _drag Field Value Type Description System.Single _mass Declaration public float _mass Field Value Type Description System.Single asteroidPrefabs Declaration public GameObject[] asteroidPrefabs Field Value Type Description GameObject [] hugeAsteroidSizeMax Declaration public float hugeAsteroidSizeMax Field Value Type Description System.Single hugeAsteroidSizeMin Declaration public float hugeAsteroidSizeMin Field Value Type Description System.Single hugeSizedAsteroids Declaration public int hugeSizedAsteroids Field Value Type Description System.Int32 normalAsteroidSizeMax Declaration public float normalAsteroidSizeMax Field Value Type Description System.Single normalAsteroidSizeMin Declaration public float normalAsteroidSizeMin Field Value Type Description System.Single normalSizedAsteroids Declaration public int normalSizedAsteroids Field Value Type Description System.Int32 rotationSpeedMax Declaration public float rotationSpeedMax Field Value Type Description System.Single rotationSpeedMin Declaration public float rotationSpeedMin Field Value Type Description System.Single thrustMax Declaration public float thrustMax Field Value Type Description System.Single thrustMin Declaration public float thrustMin Field Value Type Description System.Single Methods RandomPointInBounds(Bounds) Declaration public static Vector3 RandomPointInBounds(Bounds bounds) Parameters Type Name Description Bounds bounds Returns Type Description Vector3"
  },
  "api/Global.AsteroidFieldEditor.html": {
    "href": "api/Global.AsteroidFieldEditor.html",
    "title": "Class AsteroidFieldEditor | Universe Explorer Unity documentation",
    "keywords": "Class AsteroidFieldEditor Inheritance System.Object AsteroidFieldEditor Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AsteroidFieldEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Global.AsteroidRing.html": {
    "href": "api/Global.AsteroidRing.html",
    "title": "Class AsteroidRing | Universe Explorer Unity documentation",
    "keywords": "Class AsteroidRing Inheritance System.Object AsteroidRing Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AsteroidRing : MonoBehaviour Fields amountOfAsteroids Declaration public int amountOfAsteroids Field Value Type Description System.Int32 asteroidPrefabs Declaration public GameObject[] asteroidPrefabs Field Value Type Description GameObject [] asteroidSizeMax Declaration public float asteroidSizeMax Field Value Type Description System.Single asteroidSizeMin Declaration public float asteroidSizeMin Field Value Type Description System.Single height Declaration public float height Field Value Type Description System.Single innerRadius Declaration public float innerRadius Field Value Type Description System.Single orbitSpeedMax Declaration public float orbitSpeedMax Field Value Type Description System.Single orbitSpeedMin Declaration public float orbitSpeedMin Field Value Type Description System.Single outerRadius Declaration public float outerRadius Field Value Type Description System.Single rotationSpeedMax Declaration public float rotationSpeedMax Field Value Type Description System.Single rotationSpeedMin Declaration public float rotationSpeedMin Field Value Type Description System.Single userMaterialFromParent Declaration public bool userMaterialFromParent Field Value Type Description System.Boolean"
  },
  "api/Global.AsteroidSettings.html": {
    "href": "api/Global.AsteroidSettings.html",
    "title": "Class AsteroidSettings | Universe Explorer Unity documentation",
    "keywords": "Class AsteroidSettings Inheritance System.Object AsteroidSettings Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AsteroidSettings : ScriptableObject Fields _angularDrag Declaration public float _angularDrag Field Value Type Description System.Single _drag Declaration public float _drag Field Value Type Description System.Single _mass Declaration public float _mass Field Value Type Description System.Single hugeAsteroidSizeMax Declaration public float hugeAsteroidSizeMax Field Value Type Description System.Single hugeAsteroidSizeMin Declaration public float hugeAsteroidSizeMin Field Value Type Description System.Single hugeSizedAsteroids Declaration public int hugeSizedAsteroids Field Value Type Description System.Int32 normalAsteroidSizeMax Declaration public float normalAsteroidSizeMax Field Value Type Description System.Single normalAsteroidSizeMin Declaration public float normalAsteroidSizeMin Field Value Type Description System.Single normalSizedAsteroids Declaration public int normalSizedAsteroids Field Value Type Description System.Int32 rotationSpeedMax Declaration public float rotationSpeedMax Field Value Type Description System.Single rotationSpeedMin Declaration public float rotationSpeedMin Field Value Type Description System.Single thrustMax Declaration public float thrustMax Field Value Type Description System.Single thrustMin Declaration public float thrustMin Field Value Type Description System.Single"
  },
  "api/Global.AtmosphereController.html": {
    "href": "api/Global.AtmosphereController.html",
    "title": "Class AtmosphereController | Universe Explorer Unity documentation",
    "keywords": "Class AtmosphereController Inheritance System.Object AtmosphereController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AtmosphereController : MonoBehaviour"
  },
  "api/Global.BaseMenu.html": {
    "href": "api/Global.BaseMenu.html",
    "title": "Class BaseMenu | Universe Explorer Unity documentation",
    "keywords": "Class BaseMenu Base menu class which offers basic methods for menus Inheritance System.Object BaseMenu MainMenuManager PauseMenuManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class BaseMenu : MonoBehaviour Properties RegisterInput Enable or disable hotkey to open/close menu Declaration public bool RegisterInput { get; set; } Property Value Type Description System.Boolean Methods Exit() Exit game Declaration public virtual void Exit() OpenSettings() Open settings and save active menu ui objects in a list and deactivate them temporarily Declaration public virtual void OpenSettings() RestoreMenu() Restore deactivated menu ui objects Declaration public virtual void RestoreMenu()"
  },
  "api/Global.BlasterBehavior.html": {
    "href": "api/Global.BlasterBehavior.html",
    "title": "Class BlasterBehavior | Universe Explorer Unity documentation",
    "keywords": "Class BlasterBehavior Laser Blaster Behavior is attached to the Laser Blaster Projectile Inheritance System.Object BlasterBehavior Namespace : Global Assembly : cs.temp.dll.dll Syntax public class BlasterBehavior : MonoBehaviour Methods SetUp(Single, Target, Single) Sets the Initial Direction of the Missle Declaration public void SetUp(float damage, Target art, float speed) Parameters Type Name Description System.Single damage Target art System.Single speed"
  },
  "api/Global.CelestialBody.BodyType.html": {
    "href": "api/Global.CelestialBody.BodyType.html",
    "title": "Enum CelestialBody.BodyType | Universe Explorer Unity documentation",
    "keywords": "Enum CelestialBody.BodyType Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum BodyType Fields Name Description Asteroid Moon Planet Sun"
  },
  "api/Global.CelestialBody.html": {
    "href": "api/Global.CelestialBody.html",
    "title": "Class CelestialBody | Universe Explorer Unity documentation",
    "keywords": "Class CelestialBody This Class is based on a Script by Sebastian Lague His GitHub Page: https://github.com/SebLague/Solar-System/tree/Episode-03/Assets/Scripts/Celestial Inheritance System.Object CelestialBody Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CelestialBody : MonoBehaviour Fields Body Declaration public CelestialBody.BodyType Body Field Value Type Description CelestialBody.BodyType BodyName Declaration public string BodyName Field Value Type Description System.String InitialVelocity Declaration public Vector3 InitialVelocity Field Value Type Description Vector3 Radius Declaration public float Radius Field Value Type Description System.Single SurfaceGravity Declaration public float SurfaceGravity Field Value Type Description System.Single Properties Mass Declaration public float Mass { get; } Property Value Type Description System.Single Position Position of the Rigidbody Declaration public Vector3 Position { get; } Property Value Type Description Vector3 Rigidbody Declaration public Rigidbody Rigidbody { get; } Property Value Type Description Rigidbody Velocity The Velocity of the rb Declaration public Vector3 Velocity { get; } Property Value Type Description Vector3 Methods UpdatePosition(Single) Updates the local position Declaration public void UpdatePosition(float scalar) Parameters Type Name Description System.Single scalar UpdateVelocity(Vector3) updates the local velocity by the acceleration Declaration public void UpdateVelocity(Vector3 acceleration) Parameters Type Name Description Vector3 acceleration"
  },
  "api/Global.CombatControllerEnemy.html": {
    "href": "api/Global.CombatControllerEnemy.html",
    "title": "Class CombatControllerEnemy | Universe Explorer Unity documentation",
    "keywords": "Class CombatControllerEnemy Combat Controller that belongs to an Enemy Inheritance System.Object AbstractCombatController CombatControllerEnemy Inherited Members AbstractCombatController._Health AbstractCombatController._CannShoot AbstractCombatController._MaxHealth AbstractCombatController._MaxShootDistance AbstractCombatController._Ammo AbstractCombatController._Damage AbstractCombatController.TakeDamage(Single) AbstractCombatController.GetHealth(Single) AbstractCombatController.SetMaxHealth(Single) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CombatControllerEnemy : AbstractCombatController Methods Die() Destroys the Enemy and drops Collectables Declaration public override void Die() Overrides AbstractCombatController.Die() HealthChanged() Called when Health of the CombatController has changed Declaration public override void HealthChanged() Overrides AbstractCombatController.HealthChanged() Unload() Declaration public void Unload()"
  },
  "api/Global.CombatControllerPlayer.html": {
    "href": "api/Global.CombatControllerPlayer.html",
    "title": "Class CombatControllerPlayer | Universe Explorer Unity documentation",
    "keywords": "Class CombatControllerPlayer Combat Controller that belongs to an Allie Inheritance System.Object AbstractCombatController CombatControllerPlayer Inherited Members AbstractCombatController._Health AbstractCombatController._CannShoot AbstractCombatController._MaxHealth AbstractCombatController._MaxShootDistance AbstractCombatController._Ammo AbstractCombatController._Damage AbstractCombatController.TakeDamage(Single) AbstractCombatController.GetHealth(Single) AbstractCombatController.SetMaxHealth(Single) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CombatControllerPlayer : AbstractCombatController Fields _LaserMaxLength Declaration public float _LaserMaxLength Field Value Type Description System.Single _LaserWidth Declaration public float _LaserWidth Field Value Type Description System.Single _LineRenderer Declaration public LineRenderer _LineRenderer Field Value Type Description LineRenderer WeaponController Declaration public WeaponController WeaponController Field Value Type Description WeaponController Methods Die() Declaration public override void Die() Overrides AbstractCombatController.Die() HealthChanged() Declaration public override void HealthChanged() Overrides AbstractCombatController.HealthChanged()"
  },
  "api/Global.DeathScreenManager.html": {
    "href": "api/Global.DeathScreenManager.html",
    "title": "Class DeathScreenManager | Universe Explorer Unity documentation",
    "keywords": "Class DeathScreenManager Death screen which appears when the player has died Inheritance System.Object DeathScreenManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DeathScreenManager : MonoBehaviour Methods enableDeathScreen() Enables the death screen and stops the player from interacting with the game Declaration public void enableDeathScreen() LoadMainMenuScene() Loads the main menu scene and sets the time scale back to 1 Declaration public void LoadMainMenuScene()"
  },
  "api/Global.EnemyBehaviour.html": {
    "href": "api/Global.EnemyBehaviour.html",
    "title": "Class EnemyBehaviour | Universe Explorer Unity documentation",
    "keywords": "Class EnemyBehaviour Inheritance System.Object EnemyBehaviour Namespace : Global Assembly : cs.temp.dll.dll Syntax public class EnemyBehaviour : MonoBehaviour Fields values Declaration public EnemyScriptableObject values Field Value Type Description EnemyScriptableObject"
  },
  "api/Global.HealthBarScript.html": {
    "href": "api/Global.HealthBarScript.html",
    "title": "Class HealthBarScript | Universe Explorer Unity documentation",
    "keywords": "Class HealthBarScript Modifies value of the health bar Inheritance System.Object HealthBarScript Namespace : Global Assembly : cs.temp.dll.dll Syntax public class HealthBarScript : MonoBehaviour Methods TakeDamage(Single) Take damage Declaration public void TakeDamage(float damage) Parameters Type Name Description System.Single damage Value that gets subtracted from the current health TakeDamageTemporary(Single) Take damage Declaration public void TakeDamageTemporary(float newHealthValue) Parameters Type Name Description System.Single newHealthValue New health value"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | Universe Explorer Unity documentation",
    "keywords": "Namespace Global Classes AbstractCombatController CombatController that manages Health AsteroidBehaviour AsteroidField AsteroidFieldEditor AsteroidRing AsteroidSettings AtmosphereController BaseMenu Base menu class which offers basic methods for menus BlasterBehavior Laser Blaster Behavior is attached to the Laser Blaster Projectile CelestialBody This Class is based on a Script by Sebastian Lague His GitHub Page: https://github.com/SebLague/Solar-System/tree/Episode-03/Assets/Scripts/Celestial CombatControllerEnemy Combat Controller that belongs to an Enemy CombatControllerPlayer Combat Controller that belongs to an Allie DeathScreenManager Death screen which appears when the player has died EnemyBehaviour HealthBarScript Modifies value of the health bar InfoCircleScript Modifies info circle Inventory Represents an Inventory InventoryController Inventory Controller InventoryMenuManager Inventory Menu Manager, NOT used any more. Item Represents an Item which could be added or removed to/from Inventory ItemAssets Helper class to easily assign Item's Sprite Attribute ItemRankEntry Represents Items Properties required for individual level Item Property: mineral, Mana, Medkit, Health ItemWorld Utility to spawn Item with the given position, also provides the ability to respawn Items inside Game World after being removeed from the Inventory ItemWorldSpawner Provides the ability to easily spawn items inside Game World, so there is no need to manuelly set item's positions LaserWeapon A Laser Weapon LevelRankTable Provides Level Data lookup utilities LevelSystem This level System should be encapsulated into game Object that implements Monobehaviour. To enable the game object reacting to experience changes, subscribe to the OnExperienceChanged event. To enable the game object reacting to level changes, subscribe to the OnLevelChanged event. LevelSystemController Level System Controller LookAtCamera Enforce 2D Game Object to look at the main camera all the time which makes it feel like a 3D Game Object MainCamera MainMenuManager Main menu manager MeteorSpawner Attach to a camera MeteorSpawnerField The MeteorSPawnerField is Isntanciated at runtime and Spawnes Collectables or Enemys when the Trigger is entered. MeteorSpawnerFieldCreator Creates Meteor Spawner Fields MinimapBehaviour MouseUIEvents Encapsultes IPointerClickHandler, IPointerEnterHander, IPointerExitHandler interfaces MusicManager NBodySimulation This Class is based on a Script by Sebastian Lague His GitHub Page: https://github.com/SebLague/Solar-System/tree/Episode-03/Assets/Scripts/Celestial PauseMenuManager Pause menu manager PlayerRankEntry Represents Player's Properties for individual level Player's Properties: MaxVelocity, BoostDuration PostProcessingManager RocketBehaivor The Rocket Behavior is attached to the Rocket Projectile Inspiriert von: https://www.theappguruz.com/blog/create-homing-missiles-in-game-unity-tutorial RocketLauncherWeapon A Rocket Launcher Weapon SelectionBarIconManager Modifies a selection bar icon SelectionBarManager Modifies selection bar SerialCommunicationTestScript Manage serial parser SettingsManager Manages settings and notifies other classes SpaceshipControls SpeedDisplay TabGroup Represents a Tab Group to navigate through the Inventory Item Group, NOT used any more. TabGroupButton Represents a single Button with TabGroup, NOT used any more. Ui_inventory Represents Inventory window that gets notified each time when player colliders with other Game Objects Ui_level Represents Level window that gets notified each time when level is updated Universe This Class is based on a Script by Sebastian Lague His GitHub Page: https://github.com/SebLague/Solar-System/tree/Episode-03/Assets/Scripts/Celestial Weapon An Abstract Class that Represents a Weapon. Including Ammo, Weapon Type and FireRate WeaponController Keeps track of all \"installed\" weapons and stores the information which weapon is active Enums CelestialBody.BodyType Item.ItemType Represents all four Item Types: Health, Mana, Mineral, Medkit Target Enum that stores the Information wether the Projectile should only tagret Enemies or Allies WeaponType The Weapon Type: Laser Blaster or Rocket"
  },
  "api/Global.InfoCircleScript.html": {
    "href": "api/Global.InfoCircleScript.html",
    "title": "Class InfoCircleScript | Universe Explorer Unity documentation",
    "keywords": "Class InfoCircleScript Modifies info circle Inheritance System.Object InfoCircleScript Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InfoCircleScript : MonoBehaviour Methods Increase(Single) Increases the current value by the specified amount Value to increase by Declaration public void Increase(float value) Parameters Type Name Description System.Single value Reduce(Single) Reduces the current value by the specified amount Value to decrease by Declaration public void Reduce(float value) Parameters Type Name Description System.Single value SetCurrentValue(Single) Sets new current value this component compares the maximum value against New current value Declaration public void SetCurrentValue(float currentValue) Parameters Type Name Description System.Single currentValue SetMaxValue(Single) Sets new maximum value this component compares the current value against New maximum value Declaration public void SetMaxValue(float maxValue) Parameters Type Name Description System.Single maxValue"
  },
  "api/Global.Inventory.html": {
    "href": "api/Global.Inventory.html",
    "title": "Class Inventory | Universe Explorer Unity documentation",
    "keywords": "Class Inventory Represents an Inventory Inheritance System.Object Inventory Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Inventory Constructors Inventory() Initialise the Item List Declaration public Inventory() Methods AddItem(Item) Adds item to the Inventory and triggers OnItemAdded Event Declaration public void AddItem(Item item) Parameters Type Name Description Item item The Item which is to be added GetItemList() Returns the item list of this Inventory Declaration public List<Item> GetItemList() Returns Type Description System.Collections.Generic.List < Item > GetTotalItemsCount() Calculates the total number of items based on the amount of each item and returns it Declaration public int GetTotalItemsCount() Returns Type Description System.Int32 RemoveItem(Item) Removes item from the Inventory and triggers OnItemRemoved Event Declaration public void RemoveItem(Item item) Parameters Type Name Description Item item The Item which is to be removed Events OnItemAdded Declaration public event EventHandler OnItemAdded Event Type Type Description EventHandler OnItemRemoved Declaration public event EventHandler OnItemRemoved Event Type Type Description EventHandler"
  },
  "api/Global.InventoryController.html": {
    "href": "api/Global.InventoryController.html",
    "title": "Class InventoryController | Universe Explorer Unity documentation",
    "keywords": "Class InventoryController Inventory Controller Inheritance System.Object InventoryController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryController : MonoBehaviour Methods GetInventory() Returns the Inventory System attacted to the game object Declaration public Inventory GetInventory() Returns Type Description Inventory"
  },
  "api/Global.InventoryMenuManager.html": {
    "href": "api/Global.InventoryMenuManager.html",
    "title": "Class InventoryMenuManager | Universe Explorer Unity documentation",
    "keywords": "Class InventoryMenuManager Inventory Menu Manager, NOT used any more. Inheritance System.Object InventoryMenuManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryMenuManager : MonoBehaviour Fields menu Declaration public GameObject menu Field Value Type Description GameObject Methods Restart() Declaration public void Restart() Resume() Declaration public void Resume()"
  },
  "api/Global.Item.html": {
    "href": "api/Global.Item.html",
    "title": "Class Item | Universe Explorer Unity documentation",
    "keywords": "Class Item Represents an Item which could be added or removed to/from Inventory Inheritance System.Object Item Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Item Fields amount Declaration public int amount Field Value Type Description System.Int32 itemType Declaration public Item.ItemType itemType Field Value Type Description Item.ItemType Methods GetSprite() Returns the associated Sprite of the individual Item Type Declaration public Sprite GetSprite() Returns Type Description Sprite GetTitle() Returns Type of this Item Declaration public string GetTitle() Returns Type Description System.String"
  },
  "api/Global.Item.ItemType.html": {
    "href": "api/Global.Item.ItemType.html",
    "title": "Enum Item.ItemType | Universe Explorer Unity documentation",
    "keywords": "Enum Item.ItemType Represents all four Item Types: Health, Mana, Mineral, Medkit Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum ItemType Fields Name Description Health Mana Medkit Mineral"
  },
  "api/Global.ItemAssets.html": {
    "href": "api/Global.ItemAssets.html",
    "title": "Class ItemAssets | Universe Explorer Unity documentation",
    "keywords": "Class ItemAssets Helper class to easily assign Item's Sprite Attribute Inheritance System.Object ItemAssets Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ItemAssets : MonoBehaviour Fields healthPotionSprite Declaration public Sprite healthPotionSprite Field Value Type Description Sprite manaPotionSprite Declaration public Sprite manaPotionSprite Field Value Type Description Sprite medkitSprite Declaration public Sprite medkitSprite Field Value Type Description Sprite mineralSprite Declaration public Sprite mineralSprite Field Value Type Description Sprite pfItemWorld Declaration public Transform pfItemWorld Field Value Type Description Transform Properties Instance Declaration public static ItemAssets Instance { get; } Property Value Type Description ItemAssets"
  },
  "api/Global.ItemRankEntry.html": {
    "href": "api/Global.ItemRankEntry.html",
    "title": "Class ItemRankEntry | Universe Explorer Unity documentation",
    "keywords": "Class ItemRankEntry Represents Items Properties required for individual level Item Property: mineral, Mana, Medkit, Health Inheritance System.Object ItemRankEntry Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ItemRankEntry : IComparable<ItemRankEntry> Properties HealthRequired Declaration public int HealthRequired { get; set; } Property Value Type Description System.Int32 ManaRequired Declaration public int ManaRequired { get; set; } Property Value Type Description System.Int32 MedkitRequired Declaration public int MedkitRequired { get; set; } Property Value Type Description System.Int32 MineralRequired Declaration public int MineralRequired { get; set; } Property Value Type Description System.Int32 Methods CompareTo(ItemRankEntry) Compares RankEntry Objects Declaration public int CompareTo(ItemRankEntry other) Parameters Type Name Description ItemRankEntry other Other ItemRankEntry to be compared with Returns Type Description System.Int32 ToString() String representation of a ItemRankEntry Declaration public override string ToString() Returns Type Description System.String"
  },
  "api/Global.ItemWorld.html": {
    "href": "api/Global.ItemWorld.html",
    "title": "Class ItemWorld | Universe Explorer Unity documentation",
    "keywords": "Class ItemWorld Utility to spawn Item with the given position, also provides the ability to respawn Items inside Game World after being removeed from the Inventory Inheritance System.Object ItemWorld Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ItemWorld : MonoBehaviour Methods DestroySelf() Destroys this ItemWorld Declaration public void DestroySelf() DropItem(Vector3, Item) Detaches the associated Item of the Item World and respawns the Item in the game world Declaration public static ItemWorld DropItem(Vector3 dropPosition, Item item) Parameters Type Name Description Vector3 dropPosition Position where the Item is to be respawned Item item Item Returns Type Description ItemWorld ItemWorld GetItem() Returns the associated Item with this ItemWorld Declaration public Item GetItem() Returns Type Description Item SetItem(Item) Sets the Item of this Item World Declaration public void SetItem(Item item) Parameters Type Name Description Item item Item SpawnItemWorld(Vector3, Item) Spawns a Item World and sets its Item Declaration public static ItemWorld SpawnItemWorld(Vector3 position, Item item) Parameters Type Name Description Vector3 position Position where the Item is to be spawned Item item Item Returns Type Description ItemWorld ItemWorld"
  },
  "api/Global.ItemWorldSpawner.html": {
    "href": "api/Global.ItemWorldSpawner.html",
    "title": "Class ItemWorldSpawner | Universe Explorer Unity documentation",
    "keywords": "Class ItemWorldSpawner Provides the ability to easily spawn items inside Game World, so there is no need to manuelly set item's positions Inheritance System.Object ItemWorldSpawner Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ItemWorldSpawner : MonoBehaviour Fields item Declaration public Item item Field Value Type Description Item"
  },
  "api/Global.LaserWeapon.html": {
    "href": "api/Global.LaserWeapon.html",
    "title": "Class LaserWeapon | Universe Explorer Unity documentation",
    "keywords": "Class LaserWeapon A Laser Weapon Inheritance System.Object Weapon LaserWeapon Inherited Members Weapon.Target Weapon.MaxAmmo Weapon.CurrentAmmo Weapon.WeaponType Weapon.Name Weapon._maxAmmo Weapon._hasAmmo Weapon._canShoot Weapon._weaponType Weapon._projectileSpeed Weapon._projectile Weapon._damage Weapon.FireRate Weapon.SocketLeft Weapon.SocketRight Weapon.Start() Weapon.Fire() Weapon.NextFire Weapon.Reload() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LaserWeapon : Weapon Methods FireProjectile() Declaration protected override void FireProjectile() Overrides Weapon.FireProjectile()"
  },
  "api/Global.LevelRankTable.html": {
    "href": "api/Global.LevelRankTable.html",
    "title": "Class LevelRankTable | Universe Explorer Unity documentation",
    "keywords": "Class LevelRankTable Provides Level Data lookup utilities Inheritance System.Object LevelRankTable Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LevelRankTable Methods GetItemLevelRankList() Returns the Item Level Rank List for all levels Declaration public static List<ItemRankEntry> GetItemLevelRankList() Returns Type Description System.Collections.Generic.List < ItemRankEntry > GetItemLevelTable() Returns the Item Level Rank for all levels, starting from the Level 1 Declaration public static Dictionary<int, ItemRankEntry> GetItemLevelTable() Returns Type Description System.Collections.Generic.Dictionary < System.Int32 , ItemRankEntry > GetPlayerLevelTable() Returns the Player Level Rank for all levels, starting from the Level 1 Declaration public static Dictionary<int, PlayerRankEntry> GetPlayerLevelTable() Returns Type Description System.Collections.Generic.Dictionary < System.Int32 , PlayerRankEntry >"
  },
  "api/Global.LevelSystem.html": {
    "href": "api/Global.LevelSystem.html",
    "title": "Class LevelSystem | Universe Explorer Unity documentation",
    "keywords": "Class LevelSystem This level System should be encapsulated into game Object that implements Monobehaviour. To enable the game object reacting to experience changes, subscribe to the OnExperienceChanged event. To enable the game object reacting to level changes, subscribe to the OnLevelChanged event. Inheritance System.Object LevelSystem Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LevelSystem Constructors LevelSystem() Sets the default level and the current item rank entities Declaration public LevelSystem() Methods GetCurrentItemLevelRank() Returns Item Properties associated with the current level Declaration public ItemRankEntry GetCurrentItemLevelRank() Returns Type Description ItemRankEntry GetCurrentPlayerLevelRank() Returns Player Properties associated with the current level Declaration public PlayerRankEntry GetCurrentPlayerLevelRank() Returns Type Description PlayerRankEntry GetHealthLevelValue() Returns the total amount of the health Items from the Inventory System Declaration public int GetHealthLevelValue() Returns Type Description System.Int32 GetLevelNumber() Returns the current level number Declaration public int GetLevelNumber() Returns Type Description System.Int32 GetManaLevelValue() Returns the total amount of the mana Items from the Inventory System Declaration public int GetManaLevelValue() Returns Type Description System.Int32 GetMedkitLevelValue() Returns the total amount of the medkit Items from the Inventory System Declaration public int GetMedkitLevelValue() Returns Type Description System.Int32 GetMineralLevelValue() Returns the total amount of the mineral Items from the Inventory System Declaration public int GetMineralLevelValue() Returns Type Description System.Int32 SetInventory(Inventory) Sets Inventory which acts as a Item Repository for this level system Declaration public void SetInventory(Inventory inventory) Parameters Type Name Description Inventory inventory The Inventory on which this Level System relies on Events OnExperienceChanged Declaration public event EventHandler OnExperienceChanged Event Type Type Description EventHandler OnLevelChanged Declaration public event EventHandler OnLevelChanged Event Type Type Description EventHandler"
  },
  "api/Global.LevelSystemController.html": {
    "href": "api/Global.LevelSystemController.html",
    "title": "Class LevelSystemController | Universe Explorer Unity documentation",
    "keywords": "Class LevelSystemController Level System Controller Inheritance System.Object LevelSystemController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LevelSystemController : MonoBehaviour"
  },
  "api/Global.LookAtCamera.html": {
    "href": "api/Global.LookAtCamera.html",
    "title": "Class LookAtCamera | Universe Explorer Unity documentation",
    "keywords": "Class LookAtCamera Enforce 2D Game Object to look at the main camera all the time which makes it feel like a 3D Game Object Inheritance System.Object LookAtCamera Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LookAtCamera : MonoBehaviour"
  },
  "api/Global.MainCamera.html": {
    "href": "api/Global.MainCamera.html",
    "title": "Class MainCamera | Universe Explorer Unity documentation",
    "keywords": "Class MainCamera Inheritance System.Object MainCamera Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MainCamera : MonoBehaviour Fields offsetX Declaration public float offsetX Field Value Type Description System.Single offsetZ Declaration public float offsetZ Field Value Type Description System.Single rotationOffsetX Declaration public float rotationOffsetX Field Value Type Description System.Single spaceShip Declaration public Transform spaceShip Field Value Type Description Transform"
  },
  "api/Global.MainMenuManager.html": {
    "href": "api/Global.MainMenuManager.html",
    "title": "Class MainMenuManager | Universe Explorer Unity documentation",
    "keywords": "Class MainMenuManager Main menu manager Inheritance System.Object BaseMenu MainMenuManager Inherited Members BaseMenu.RegisterInput BaseMenu.OpenSettings() BaseMenu.RestoreMenu() BaseMenu.Exit() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MainMenuManager : BaseMenu Methods LoadGameScene() Load game scene Declaration public void LoadGameScene()"
  },
  "api/Global.MeteorSpawner.html": {
    "href": "api/Global.MeteorSpawner.html",
    "title": "Class MeteorSpawner | Universe Explorer Unity documentation",
    "keywords": "Class MeteorSpawner Attach to a camera Inheritance System.Object MeteorSpawner Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MeteorSpawner : MonoBehaviour Properties Density Declaration public int Density { get; } Property Value Type Description System.Int32"
  },
  "api/Global.MeteorSpawnerField.html": {
    "href": "api/Global.MeteorSpawnerField.html",
    "title": "Class MeteorSpawnerField | Universe Explorer Unity documentation",
    "keywords": "Class MeteorSpawnerField The MeteorSPawnerField is Isntanciated at runtime and Spawnes Collectables or Enemys when the Trigger is entered. Inheritance System.Object MeteorSpawnerField Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MeteorSpawnerField : MonoBehaviour Fields AsteroidSettings Declaration public AsteroidSettings AsteroidSettings Field Value Type Description AsteroidSettings SettingsFoldout Declaration public bool SettingsFoldout Field Value Type Description System.Boolean Properties ColliderSize Declaration public float ColliderSize { get; } Property Value Type Description System.Single Methods CreateCollider() Adds BoxCollider component if it doesn't already exist Declaration public void CreateCollider() RandomPointInBounds(Bounds) Generates a random coordinate within given bounds The bounds to generate a coordinate in Declaration public static Vector3 RandomPointInBounds(Bounds bounds) Parameters Type Name Description Bounds bounds Returns Type Description Vector3 Start() Declaration public void Start()"
  },
  "api/Global.MeteorSpawnerFieldCreator.html": {
    "href": "api/Global.MeteorSpawnerFieldCreator.html",
    "title": "Class MeteorSpawnerFieldCreator | Universe Explorer Unity documentation",
    "keywords": "Class MeteorSpawnerFieldCreator Creates Meteor Spawner Fields Inheritance System.Object MeteorSpawnerFieldCreator Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MeteorSpawnerFieldCreator : MonoBehaviour Fields Meteors Declaration public Transform[] Meteors Field Value Type Description Transform [] MeteorSpawnerField Declaration public Transform MeteorSpawnerField Field Value Type Description Transform parent Declaration public Transform parent Field Value Type Description Transform Properties Instance Singleton Instance Declaration public static MeteorSpawnerFieldCreator Instance { get; } Property Value Type Description MeteorSpawnerFieldCreator Methods Awake() Declaration public void Awake()"
  },
  "api/Global.MinimapBehaviour.html": {
    "href": "api/Global.MinimapBehaviour.html",
    "title": "Class MinimapBehaviour | Universe Explorer Unity documentation",
    "keywords": "Class MinimapBehaviour Inheritance System.Object MinimapBehaviour Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MinimapBehaviour : MonoBehaviour Fields playerMapMarker Declaration public Sprite playerMapMarker Field Value Type Description Sprite spaceShip Declaration public Transform spaceShip Field Value Type Description Transform Methods getCameraHeight() Returns the current Y coordinates of the camera Declaration public float getCameraHeight() Returns Type Description System.Single setCameraHeight(Single) Sets camera height to the specified value New Y coordinates of the camera Declaration public void setCameraHeight(float newCameraHeight) Parameters Type Name Description System.Single newCameraHeight"
  },
  "api/Global.MouseUIEvents.html": {
    "href": "api/Global.MouseUIEvents.html",
    "title": "Class MouseUIEvents | Universe Explorer Unity documentation",
    "keywords": "Class MouseUIEvents Encapsultes IPointerClickHandler, IPointerEnterHander, IPointerExitHandler interfaces Inheritance System.Object MouseUIEvents Implements IPointerClickHandler IPointerEnterHandler IPointerExitHandler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MouseUIEvents : MonoBehaviour, IPointerClickHandler, IPointerEnterHandler, IPointerExitHandler Fields MouseEnterHandler Declaration public Action MouseEnterHandler Field Value Type Description Action MouseExitHandler Declaration public Action MouseExitHandler Field Value Type Description Action RightClickHandler Declaration public Action RightClickHandler Field Value Type Description Action Methods OnPointerClick(PointerEventData) Detects Mouse Click Events Declaration public void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData EventData OnPointerEnter(PointerEventData) Detects Mouse Enter Events Declaration public void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData EventData OnPointerExit(PointerEventData) Detects Mouse Exit Events Declaration public void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData EventData Implements IPointerClickHandler IPointerEnterHandler IPointerExitHandler"
  },
  "api/Global.MusicManager.html": {
    "href": "api/Global.MusicManager.html",
    "title": "Class MusicManager | Universe Explorer Unity documentation",
    "keywords": "Class MusicManager Inheritance System.Object MusicManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MusicManager : MonoBehaviour Fields AudioClips Declaration public AudioClip[] AudioClips Field Value Type Description AudioClip [] AudioSource Declaration public AudioSource AudioSource Field Value Type Description AudioSource PickRandom Declaration public bool PickRandom Field Value Type Description System.Boolean"
  },
  "api/Global.NBodySimulation.html": {
    "href": "api/Global.NBodySimulation.html",
    "title": "Class NBodySimulation | Universe Explorer Unity documentation",
    "keywords": "Class NBodySimulation This Class is based on a Script by Sebastian Lague His GitHub Page: https://github.com/SebLague/Solar-System/tree/Episode-03/Assets/Scripts/Celestial Inheritance System.Object NBodySimulation Namespace : Global Assembly : cs.temp.dll.dll Syntax public class NBodySimulation : MonoBehaviour Fields SpeedReduction Declaration public float SpeedReduction Field Value Type Description System.Single Properties Bodies Declaration public static CelestialBody[] Bodies { get; } Property Value Type Description CelestialBody []"
  },
  "api/Global.PauseMenuManager.html": {
    "href": "api/Global.PauseMenuManager.html",
    "title": "Class PauseMenuManager | Universe Explorer Unity documentation",
    "keywords": "Class PauseMenuManager Pause menu manager Inheritance System.Object BaseMenu PauseMenuManager Inherited Members BaseMenu.RegisterInput BaseMenu.OpenSettings() BaseMenu.RestoreMenu() BaseMenu.Exit() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PauseMenuManager : BaseMenu Methods OpenMenu(Boolean) Opens/Closes pause menu and sets time scale accordingly Declaration public void OpenMenu(bool active) Parameters Type Name Description System.Boolean active Activate/Deactivate menu ReloadScene() Sets time scale to 1 and reloads current scene Declaration public void ReloadScene()"
  },
  "api/Global.PlayerRankEntry.html": {
    "href": "api/Global.PlayerRankEntry.html",
    "title": "Class PlayerRankEntry | Universe Explorer Unity documentation",
    "keywords": "Class PlayerRankEntry Represents Player's Properties for individual level Player's Properties: MaxVelocity, BoostDuration Inheritance System.Object PlayerRankEntry Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayerRankEntry Properties BoostDuration Boost Duration that will get updated while upgrading or downgrading Declaration public int BoostDuration { get; set; } Property Value Type Description System.Int32 DamageFactor Damage Factor the Player could have Declaration public float DamageFactor { get; set; } Property Value Type Description System.Single MaxVelocity Max Velocity the Player could have Declaration public float MaxVelocity { get; set; } Property Value Type Description System.Single Methods ToString() String representation of a PlayerRankEntry Declaration public override string ToString() Returns Type Description System.String string Overrides System.Object.ToString()"
  },
  "api/Global.PostProcessingManager.html": {
    "href": "api/Global.PostProcessingManager.html",
    "title": "Class PostProcessingManager | Universe Explorer Unity documentation",
    "keywords": "Class PostProcessingManager Inheritance System.Object PostProcessingManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PostProcessingManager : MonoBehaviour"
  },
  "api/Global.RocketBehaivor.html": {
    "href": "api/Global.RocketBehaivor.html",
    "title": "Class RocketBehaivor | Universe Explorer Unity documentation",
    "keywords": "Class RocketBehaivor The Rocket Behavior is attached to the Rocket Projectile Inspiriert von: https://www.theappguruz.com/blog/create-homing-missiles-in-game-unity-tutorial Inheritance System.Object RocketBehaivor Namespace : Global Assembly : cs.temp.dll.dll Syntax public class RocketBehaivor : MonoBehaviour Methods SetUp(Single, Target) Sets the Initial Direction of the Missle Declaration public void SetUp(float damage, Target art) Parameters Type Name Description System.Single damage Target art"
  },
  "api/Global.RocketLauncherWeapon.html": {
    "href": "api/Global.RocketLauncherWeapon.html",
    "title": "Class RocketLauncherWeapon | Universe Explorer Unity documentation",
    "keywords": "Class RocketLauncherWeapon A Rocket Launcher Weapon Inheritance System.Object Weapon RocketLauncherWeapon Inherited Members Weapon.Target Weapon.MaxAmmo Weapon.CurrentAmmo Weapon.WeaponType Weapon.Name Weapon._maxAmmo Weapon._hasAmmo Weapon._canShoot Weapon._weaponType Weapon._projectileSpeed Weapon._projectile Weapon._damage Weapon.FireRate Weapon.SocketLeft Weapon.SocketRight Weapon.Start() Weapon.Fire() Weapon.NextFire Weapon.Reload() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class RocketLauncherWeapon : Weapon Methods FireProjectile() Declaration protected override void FireProjectile() Overrides Weapon.FireProjectile()"
  },
  "api/Global.SelectionBarIconManager.html": {
    "href": "api/Global.SelectionBarIconManager.html",
    "title": "Class SelectionBarIconManager | Universe Explorer Unity documentation",
    "keywords": "Class SelectionBarIconManager Modifies a selection bar icon Inheritance System.Object SelectionBarIconManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SelectionBarIconManager : MonoBehaviour Properties Key Gets key code of the icon Sets the key code to select the icon and shortens long names Declaration public KeyCode Key { get; set; } Property Value Type Description KeyCode Name Gets display name of the icon Sets display name of the icon Declaration public string Name { get; set; } Property Value Type Description System.String Selected Gets selection bool Sets selection bool Declaration public bool Selected { get; set; } Property Value Type Description System.Boolean Methods SetWeapon(Weapon) Sets weapon of the icon Declaration public void SetWeapon(Weapon w) Parameters Type Name Description Weapon w Weapon"
  },
  "api/Global.SelectionBarManager.html": {
    "href": "api/Global.SelectionBarManager.html",
    "title": "Class SelectionBarManager | Universe Explorer Unity documentation",
    "keywords": "Class SelectionBarManager Modifies selection bar Inheritance System.Object SelectionBarManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SelectionBarManager : MonoBehaviour"
  },
  "api/Global.SerialCommunicationTestScript.html": {
    "href": "api/Global.SerialCommunicationTestScript.html",
    "title": "Class SerialCommunicationTestScript | Universe Explorer Unity documentation",
    "keywords": "Class SerialCommunicationTestScript Manage serial parser Inheritance System.Object SerialCommunicationTestScript Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SerialCommunicationTestScript : MonoBehaviour"
  },
  "api/Global.SettingsManager.html": {
    "href": "api/Global.SettingsManager.html",
    "title": "Class SettingsManager | Universe Explorer Unity documentation",
    "keywords": "Class SettingsManager Manages settings and notifies other classes Inheritance System.Object SettingsManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SettingsManager : MonoBehaviour Methods addSettingsEventListener(UnityAction) Add listener settingsEvent. Notifies all listeners when settings have been changed. Declaration public void addSettingsEventListener(UnityAction unityAction) Parameters Type Name Description UnityAction unityAction Unity action Discard() Discard changes and return Declaration public void Discard() LoadUI() Update settings ui Declaration public void LoadUI() Save() Save settings and return Declaration public void Save()"
  },
  "api/Global.SpaceshipControls.html": {
    "href": "api/Global.SpaceshipControls.html",
    "title": "Class SpaceshipControls | Universe Explorer Unity documentation",
    "keywords": "Class SpaceshipControls Inheritance System.Object SpaceshipControls Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SpaceshipControls : MonoBehaviour, ISpaceshipControls Fields autoDeceleration Declaration public bool autoDeceleration Field Value Type Description System.Boolean cursorTexture Declaration public Texture2D cursorTexture Field Value Type Description Texture2D enableDrifting Declaration public bool enableDrifting Field Value Type Description System.Boolean useJoystick Declaration public bool useJoystick Field Value Type Description System.Boolean Methods Boost() Boosts spaceship as long as this method is called. Declaration public void Boost() getBoostMultiplier() Returns the current boost multiplier Declaration public float getBoostMultiplier() Returns Type Description System.Single getCurrentBoostDuration() Returns the current boost duration in frames Declaration public int getCurrentBoostDuration() Returns Type Description System.Int32 getCurrentMovement() Returns current movement as a vector. Declaration public Vector3 getCurrentMovement() Returns Type Description Vector3 getIsRolling() Returns whether spaceship is currently rolling Declaration public bool getIsRolling() Returns Type Description System.Boolean getMaxBoostDuration() Returns the maximum boost duration in frames Declaration public int getMaxBoostDuration() Returns Type Description System.Int32 getMaximumVelocity() Returns maximum velocity in Unity units Declaration public float getMaximumVelocity() Returns Type Description System.Single getRollPerFrame() Returns rolling steps per frame Declaration public float getRollPerFrame() Returns Type Description System.Single Move(Single) Applies force to move the spaceship forward Declaration public void Move(float force) Parameters Type Name Description System.Single force Speed at which the spaceship should accelerate Move(Vector3, Single) Applies force to the spaceship in the specified direction Declaration public void Move(Vector3 direction, float force) Parameters Type Name Description Vector3 direction Movement direction System.Single force Speed at which the spaceship should accelerate Roll(Single) Starts a roll with the specified force if a roll is not already in progress Declaration public void Roll(float force) Parameters Type Name Description System.Single force Negative amount for left roll, positive amount for right roll Rotate(Vector2) Rotates the Spaceship according to the location of the mouse Declaration public void Rotate(Vector2 mouseInput) Parameters Type Name Description Vector2 mouseInput Location of the mouse on scren setBoostMultiplier(Single) Sets a new boost multiplier Declaration public void setBoostMultiplier(float newBoostMultiplier) Parameters Type Name Description System.Single newBoostMultiplier New boost multiplier for the spaceship setMaxBoostDuration(Int32) Sets new maximum boost duration Declaration public void setMaxBoostDuration(int newMaxBoostDuration) Parameters Type Name Description System.Int32 newMaxBoostDuration setMaximumVelocity(Single) Sets a new maximum velocity Declaration public void setMaximumVelocity(float newMaxVelocity) Parameters Type Name Description System.Single newMaxVelocity New maximum velocity for the spaceship in Unity units setRollPerFrame(Single) Returns degrees of rotation per frame of rolling Declaration public void setRollPerFrame(float rollPerFrame) Parameters Type Name Description System.Single rollPerFrame Sets rolling steps per frame. I Roll = 360 degree"
  },
  "api/Global.SpeedDisplay.html": {
    "href": "api/Global.SpeedDisplay.html",
    "title": "Class SpeedDisplay | Universe Explorer Unity documentation",
    "keywords": "Class SpeedDisplay Inheritance System.Object SpeedDisplay Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SpeedDisplay : MonoBehaviour Methods SetNewCurrentSpeed(Single) Sets new current speed value this component compares the maximum speed against New current speed value Declaration public void SetNewCurrentSpeed(float newCurrentSpeed) Parameters Type Name Description System.Single newCurrentSpeed SetNewMaxSpeed(Single) Sets new maximum speed this component compares the current speed against New maximum speed value Declaration public void SetNewMaxSpeed(float newMaxSpeed) Parameters Type Name Description System.Single newMaxSpeed"
  },
  "api/Global.TabGroup.html": {
    "href": "api/Global.TabGroup.html",
    "title": "Class TabGroup | Universe Explorer Unity documentation",
    "keywords": "Class TabGroup Represents a Tab Group to navigate through the Inventory Item Group, NOT used any more. Inheritance System.Object TabGroup Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TabGroup : MonoBehaviour Fields objectsToSwap Declaration public List<GameObject> objectsToSwap Field Value Type Description System.Collections.Generic.List < GameObject > tabActive Declaration public Sprite tabActive Field Value Type Description Sprite tabHover Declaration public Sprite tabHover Field Value Type Description Sprite tabIdle Declaration public Sprite tabIdle Field Value Type Description Sprite Methods OnTabEnter(TabGroupButton) Declaration public void OnTabEnter(TabGroupButton button) Parameters Type Name Description TabGroupButton button OnTabExit(TabGroupButton) Declaration public void OnTabExit(TabGroupButton button) Parameters Type Name Description TabGroupButton button OnTabSelected(TabGroupButton) Declaration public void OnTabSelected(TabGroupButton button) Parameters Type Name Description TabGroupButton button ResetTabs() Declaration public void ResetTabs() subscribe(TabGroupButton) Declaration public void subscribe(TabGroupButton button) Parameters Type Name Description TabGroupButton button"
  },
  "api/Global.TabGroupButton.html": {
    "href": "api/Global.TabGroupButton.html",
    "title": "Class TabGroupButton | Universe Explorer Unity documentation",
    "keywords": "Class TabGroupButton Represents a single Button with TabGroup, NOT used any more. Inheritance System.Object TabGroupButton Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TabGroupButton : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler, IPointerClickHandler Fields background Declaration public Image background Field Value Type Description Image tabGroup Declaration public TabGroup tabGroup Field Value Type Description TabGroup Methods OnPointerClick(PointerEventData) Declaration public void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerEnter(PointerEventData) Declaration public void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) Declaration public void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler"
  },
  "api/Global.Target.html": {
    "href": "api/Global.Target.html",
    "title": "Enum Target | Universe Explorer Unity documentation",
    "keywords": "Enum Target Enum that stores the Information wether the Projectile should only tagret Enemies or Allies Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum Target Fields Name Description Allied Enemy"
  },
  "api/Global.Ui_inventory.html": {
    "href": "api/Global.Ui_inventory.html",
    "title": "Class Ui_inventory | Universe Explorer Unity documentation",
    "keywords": "Class Ui_inventory Represents Inventory window that gets notified each time when player colliders with other Game Objects Inheritance System.Object Ui_inventory Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Ui_inventory : MonoBehaviour Methods SetGameObject(GameObject) Sets the associated Game Object (Space ship) which provides location and other data Declaration public void SetGameObject(GameObject gameObject) Parameters Type Name Description GameObject gameObject Game Object on which UI operates on SetInventory(Inventory) Sets the associated Inventory System which provides Events utilities and data accessibilities Declaration public void SetInventory(Inventory inventory) Parameters Type Name Description Inventory inventory The Inventory on which UI operates on"
  },
  "api/Global.Ui_level.html": {
    "href": "api/Global.Ui_level.html",
    "title": "Class Ui_level | Universe Explorer Unity documentation",
    "keywords": "Class Ui_level Represents Level window that gets notified each time when level is updated Inheritance System.Object Ui_level Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Ui_level : MonoBehaviour Fields healthBar Declaration public Slider healthBar Field Value Type Description Slider healthMaxValue Declaration public TextMeshProUGUI healthMaxValue Field Value Type Description TextMeshProUGUI manaBar Declaration public Slider manaBar Field Value Type Description Slider manaMaxValue Declaration public TextMeshProUGUI manaMaxValue Field Value Type Description TextMeshProUGUI medkitBar Declaration public Slider medkitBar Field Value Type Description Slider medkitMaxValue Declaration public TextMeshProUGUI medkitMaxValue Field Value Type Description TextMeshProUGUI mineralBar Declaration public Slider mineralBar Field Value Type Description Slider mineralMaxValue Declaration public TextMeshProUGUI mineralMaxValue Field Value Type Description TextMeshProUGUI Methods SetLevelSystem(LevelSystem) Sets the associated Level System which provides Events utilities and data accessibilities Declaration public void SetLevelSystem(LevelSystem levelSystem) Parameters Type Name Description LevelSystem levelSystem"
  },
  "api/Global.Universe.html": {
    "href": "api/Global.Universe.html",
    "title": "Class Universe | Universe Explorer Unity documentation",
    "keywords": "Class Universe This Class is based on a Script by Sebastian Lague His GitHub Page: https://github.com/SebLague/Solar-System/tree/Episode-03/Assets/Scripts/Celestial Inheritance System.Object Universe Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Universe Fields GravitationalConstant Declaration public const float GravitationalConstant = 0.0001F Field Value Type Description System.Single PhysicsTimeStep Declaration public const float PhysicsTimeStep = 0.01F Field Value Type Description System.Single"
  },
  "api/Global.Weapon.html": {
    "href": "api/Global.Weapon.html",
    "title": "Class Weapon | Universe Explorer Unity documentation",
    "keywords": "Class Weapon An Abstract Class that Represents a Weapon. Including Ammo, Weapon Type and FireRate Inheritance System.Object Weapon LaserWeapon RocketLauncherWeapon Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class Weapon : MonoBehaviour Fields _canShoot Declaration protected bool _canShoot Field Value Type Description System.Boolean _damage Declaration protected float _damage Field Value Type Description System.Single _hasAmmo Declaration protected bool _hasAmmo Field Value Type Description System.Boolean _maxAmmo Declaration protected int _maxAmmo Field Value Type Description System.Int32 _projectile Declaration protected Transform _projectile Field Value Type Description Transform _projectileSpeed Declaration protected float _projectileSpeed Field Value Type Description System.Single _weaponType Declaration protected WeaponType _weaponType Field Value Type Description WeaponType SocketLeft Position to spawn the Rocket at Declaration public Transform SocketLeft Field Value Type Description Transform SocketRight Declaration public Transform SocketRight Field Value Type Description Transform Target Declaration public Target Target Field Value Type Description Target Properties CurrentAmmo Declaration public int CurrentAmmo { get; protected set; } Property Value Type Description System.Int32 FireRate Declaration public float FireRate { get; } Property Value Type Description System.Single MaxAmmo Declaration public int MaxAmmo { get; protected set; } Property Value Type Description System.Int32 Name Declaration public string Name { get; } Property Value Type Description System.String NextFire Declaration public float NextFire { get; } Property Value Type Description System.Single WeaponType Declaration public WeaponType WeaponType { get; protected set; } Property Value Type Description WeaponType Methods Fire() Calls FireProjectile is the Weapon is active Declaration public void Fire() FireProjectile() Declaration protected abstract void FireProjectile() Reload() Declaration public void Reload() Start() Declaration public void Start()"
  },
  "api/Global.WeaponController.html": {
    "href": "api/Global.WeaponController.html",
    "title": "Class WeaponController | Universe Explorer Unity documentation",
    "keywords": "Class WeaponController Keeps track of all \"installed\" weapons and stores the information which weapon is active Inheritance System.Object WeaponController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class WeaponController : MonoBehaviour Fields Weapons Declaration public Weapon[] Weapons Field Value Type Description Weapon [] Properties ActiveWeaponIndex Declaration public int ActiveWeaponIndex { get; } Property Value Type Description System.Int32 DamageMultiplier Declaration public float DamageMultiplier { get; set; } Property Value Type Description System.Single Methods FireActiveWeapon() Fires the weapon that is currently active Declaration public void FireActiveWeapon() SwitchWeapon() Switches the Weapon to the next, in order, not randomly Declaration public void SwitchWeapon() SwitchWeapon(Int32) Switches to the installed weapon with index Declaration public bool SwitchWeapon(int newWeaponIndex) Parameters Type Name Description System.Int32 newWeaponIndex the Weapon index to switch to Returns Type Description System.Boolean true if weapon was switched, false if the weapon index is greater than the installed weapons count"
  },
  "api/Global.WeaponType.html": {
    "href": "api/Global.WeaponType.html",
    "title": "Enum WeaponType | Universe Explorer Unity documentation",
    "keywords": "Enum WeaponType The Weapon Type: Laser Blaster or Rocket Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum WeaponType Fields Name Description LASER ROCKET"
  },
  "manual/coniunctis.html": {
    "href": "manual/coniunctis.html",
    "title": "Coniunctis nec qui et lanient monticolae vitae | Universe Explorer Unity documentation",
    "keywords": "Coniunctis nec qui et lanient monticolae vitae Opem ille Lorem markdownum cavis exululat inutile. Illi quem caeli, vola patruo difficili Iuppiter Patraeque, est ardebant ingeniis Troica intus Amore tibi mirantem superfusis, multum. Ut Achilles Et sitim Tibi modo ait temptant crinita daret Pariter in removi offensasque Lenaeo damno terra Phoebes ut damnosa classis ignes templo; tua ulla capillos ultima. Videre percusso plectro templa fuit diva minimum debere, quid nomen Philomela animis. Verbis istis flagrat vulnera inpediique ignes. Gravi filo obvius arte Amphionis Panes emisitque iubet. Latona te timens Latentia ante, eundem meritorum sunto ! Elige in timuit templa ferrea, qui arma ligati stagnum turbant. Fraternaque aeternus, dedisse, naufragus corripiens ranas Amathunta et quod laetior culpa nec semper scorpius fuit vicem corpora ardere. Fallit in artus primordia, fratres per aliis , ipsi manu Asiae quod marmorea . mountain(googleVga, pngIphone); var radcabBitrate = dnsCronRecursion; gui(2); ipImageAix += vle(drm_cisc, horizontal + computer_key); jre(vaporware_adc_multi); Lumina ut tamen praesentia vidistis nymphae auroque Bromumque in portant furorem. Visa init resurgere praevitiat canibus et, dedignata turea, ilia. Pisenore mensura insula aere nec per o gladium causa: Alcidae. Veris sentes pallet, alta melius nostra amborum probant, deam. Iuventae dedimus nitidaque hunc traxisse sermonibus pectine flecti an pateres, hac ore gelidis foret semper. Sithon pelle. Bracchia Hippason videntur fateri hosti: palpitat animo est reliquit anne nam confusaque. Interea rex altis munera quem quae quoque rorant, rauco albescere scopulo moriensque parvo, pectus illa, quadrupedes. Notavit haec. Vertit pars quem Euryte casu usta iterum! Ablatum pectus corripiunt neu humus tamquam; ducens stellarum amore. Pulsisque latet, ad tamen victor fulva Tirynthius posco; qui inque in poena quidem enses !"
  },
  "manual/etiam.html": {
    "href": "manual/etiam.html",
    "title": "Etiam nantemque exul | Universe Explorer Unity documentation",
    "keywords": "Etiam nantemque exul Cum tulit Lorem markdownum quos stimulosque altos . Putat nubes molle Troiae vero dea; nostraque plurima . Vos de mihi, credidit: salibus et iacuit, volvitur sunt unda fronti deriguisse refert . Sumpsisse viso Nubila nomine. Purpura se o et causa parva ripas, adsonat saevaque; quid modo ambo et venere voveo. Sine et esse, illa tempore, sive tibi roseo, ministerio altos. Trepident medicamine, primasque cum et peregit dapibusque quoslibet hominis quoque insula. Tepentibus ut Cecropios ab turba, est auro ferventi aliter duratos feres differtis Ausoniis potes, non noctis Laertaque iuvenes. Caelumque vestigia Et promissa fila sentiet leges; Phrygiae et levatus ferire? Salutifer coniugis fierent ante fecissent post vultumque ultima, per radios currere; tandem. Fuerat qua, ne foedera reformatus nunc diu dea audet nonne. Ut utinam mitia tenuerunt movent spectans Mavortis nulla ite, somnos exsiccata dixit Aeetias. Binas Trinacriam album ex ipse. Quoque una utraque tardius placetque gerere; mariti sed dare ludunt memorante Delphice corpora. Caret quantum intellegat venis gaudent eurus. Et suos crista; has et ferarum quid audit omine; mea cum praemia quae duris, suspicor. Adflati qui Spiro conata supprimit diemque; ora oblitus ensem alti non quo lacrimis ferunt, ageret Cebrenida rutilis delendaque? Terras lata modus: nec fas, misi utque adpositis Iunonis. Fide vidit, ferox Schoeneia mundi, voce, tellus pariterque pedum, sic Celadon securior corpora partesque posito. Potest faxo unda pendulaque ille rostro, haesit pars: formidine captat, viseret simulaverat! Sequi est peragit flumineae pallent simulatas formae avulsa, imagine undis; formam. Et nec sed adeunt, huic aequa et ignes nec, medere terram. Move ipsum abnuat retemptat retinebat duabus diu Iovi est pluma. Tecum non deducit Pelops Inachus: arcet aliquemque, regia telo. Tollens altore nec semel qui voce Palatinae Apertis et dei duo inquit ; luna secundo, fervida terret. In haec dextra septima Tydides tibi: congelat hospes nativum radice tegumenque membris Hesperio ne Libys, est vocabula siqua. Dumque stet mulces , ut fontem dea atricolor, est pronos, clarissimus poterat cum intrare sidere templi. cut_metadata(whitelistSequenceUnit.thick.of_bezel_cdma( address_suffix_troubleshooting), sram_trojan(4, hdmi_network - 1)); flash.apache -= web_gps_plug; if (offline.dac_bridge(scrollEbookRom, parameter.internal_target_superscalar(2)) < qwerty + 2 - ipvCgiContextual) { certificateIdeAsp = overclocking + app; supplyCard = siteRaster; } Sagitta curvum quoque petisti opibusque proximitas in, illa vestrum, mihi domum nescia flexit sacra in. Magni vive sim crescente causam saxo voluit, mens, quod. Tela ter ulterius similis illos nato refugit ait verbaque nec fatigatum penates iaculatricemque cecidit pinnas, cum. Misso contigit caelo dedissent lumina; nympha ad vobis occidat, malo sacra utrumque cunctos Diomedeos addita. Virgineus autumnos, ait mitissima curru: fuit sed fessi se habebat hactenus Ultor; meus."
  }
}